---
- name: Install Docker and Docker Compose
  hosts: dev_docker_swarm_manager:dev_docker_swarm_worker
  become: yes  # To run tasks as root

  tasks:
    - name: Update apt package cache (for Debian/Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

    - name: Install required packages
      package:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - docker.io
          - docker-compose
        state: present
      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

- name: Initialize Docker Swarm and Get Join Token
  hosts: dev_docker_swarm_manager
  become: yes  # To run tasks as root

  tasks:
    - name: Read external vars file
      include_vars:
        file: external_vars.yml

    - name: Check if Docker Swarm is already initialized
      command: docker info
      register: docker_info
      changed_when: false  # Treat this task as non-changing

    - name: Initialize Docker Swarm
      command: docker swarm init
      when: "'Swarm: active' not in docker_info.stdout"

    - name: Extract Join Token for Workers
      command: docker swarm join-token worker
      register: join_worker_command
      when: "'Swarm: active' in docker_info.stdout"

    - name: Print Join Token for Workers
      debug:
        msg: "Join token for worker nodes: {{ join_worker_command.stdout }}"
      when: "'Swarm: active' in docker_info.stdout"

    - name: Extract Join Command
      set_fact:
        join_command: "{{ join_worker_command.stdout | regex_search('(docker swarm join .+)', '\\1') }}"
      when: join_worker_command is defined
    
    - name: Create a file with a value on the control node
      copy:
        content: "{{ join_command }}"
        dest: /tmp/join_command_worker.sh
      delegate_to: localhost

    - name: Print Join Command
      debug:
        msg: "Join command for workers: {{ join_command }}"
      when: join_command is defined
    
    
- name: Execute Join Command on Worker Nodes
  hosts: dev_docker_swarm_worker
  become: yes  # To run tasks as root
  

  tasks:
    - name: Copy the file to target hosts
      copy:
        src: /tmp/join_command_worker.sh
        dest: /tmp/join_command_worker.sh
    
    - name: Print Join Command
      debug:
        msg: "Join command for workers: {{ join_command }}"
      when: join_command is defined

    - name: Check if Docker Swarm is already initialized
      command: docker info
      register: docker_info
      changed_when: false  # Treat this task as non-changing

    - name: Execute Join Command
      command: "{{ join_command }}"
      when: "'Swarm: active' not in docker_info.stdout"

    - name: Print Status
      debug:
        msg: "Node status after join: {{ swarm_status.stdout }}"
