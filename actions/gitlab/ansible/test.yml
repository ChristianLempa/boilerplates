---
spec:
  inputs:
    as:
      default: test-ansible
    stage:
      default: test

    root_dir:
      default: ${CI_PROJECT_DIR}/ansible
      description: 'Root directory containing Ansible config, inventory, and playbooks.'
    project_file:
      description: 'The filename of a valid Ansible Playbook that will be tested/linted.'


---
'$[[ inputs.as ]]':
  stage: '$[[ inputs.stage ]]'
  image:
    name: alpine:latest
    entrypoint: [""]
  variables:
    ANSIBLE_DIR: "$[[ inputs.root_dir ]]"
    PROJECT_FILE: "$[[ inputs.project_file ]]"
  before_script: |
    echo "---------------------------------------------------------------------------"
    echo "Ansible CI/CD Component - Preparing an alpine image to test/lint Ansible playbook & tasks"
    echo "---------------------------------------------------------------------------"
    echo "Installing dependencies (ansible-core ansible-lint)..."
    apk add --no-cache ansible-core ansible-lint >/dev/null
    echo "---------------------------------------------------------------------------"
    echo "Installing additional modules from the ansible-galaxy collection [ansible.posix community.docker]"
    ansible-galaxy collection install ansible.posix >/dev/null       # You may want to add other modules that you use
    ansible-galaxy collection install community.docker >/dev/null    #  in your ansible playbooks below these lines.
    echo "---------------------------------------------------------------------------"
    echo "Entering the Ansible root directory"
    cd ${ANSIBLE_DIR} >/dev/null
  script: |
    echo "---------------------------------------------------------------------------"
    echo "Ansible CI/CD Component - Begin test/linting of Ansible playbook & tasks..."
    echo "---------------------------------------------------------------------------"
    ansible-lint ${PROJECT_FILE}
  rules:
    - if: |
        $CI_PIPELINE_SOURCE == "push" ||
        $CI_PIPELINE_SOURCE == "merge_request_event"
      #changes:
        #- '$[[ inputs.root_dir ]]/**'

