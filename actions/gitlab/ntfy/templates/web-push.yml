# This script was possible via ntfy documentation 
# and also study of: https://sleeplessbeastie.eu/2024/03/18/how-to-utilize-ntfy-notifications-from-gitlab-pipelines/
# Base component structure can be credited to https://www.youtube.com/watch?v=pwRWXCdbDVo
# Suggested component description:
# CI/CD component to provide ntfy web-push notifications as a stage within GitLab runs.
---
spec:
  inputs:
    as:
      default: ntfy-web-push
      description: 'The name of the Gitlab CI/CD job that will be generated by this component.'
    stage:
      default: ntfy
      description: 'The name of the stage this components job will belong to..'
    ntfy_token:
      description: 'The *access token* that will be used to authenticate to ntfy and send a web-push notification'
    ntfy_url:
      default: 'https://ntfy.pcfae.com/Ad_Arbitorium-GitOps'
      description: 'The ntfy URL (containing the topic) that the web-push notification will be sent to. i.e. https://ntfy.sh/gitlab'
    msg_action:
      default: ''
      description: 'Defines a scripted action that a user can take upon recieving the web-push notification.'
    msg_attach:
      default: ''
      description: 'The url of an image or other file to be attached to the ntfy web-push notification.'
    msg_body:
      default: '${CI_PROJECT_NAME}: ${MSG_STATE} (ref ${CI_COMMIT_REF_NAME})'
      description: 'The message that should be sent using this ntfy component.'
    msg_click:
      default: ''
      description: 'A url that should be opened when the user clicks on the message.'
    msg_markdown:
      default: false
      description: 'If this value is set to true, the message body will be processed as markdown formatted text.'
    msg_priority:
      default: 'low'
      description: 'The priority level of the notification that will be sent.'
    msg_tags:
      default: 'bell'
      description: ' Comma seperated list of Tags/Emoji that the message should be marked with. (i.e. tags:scream_cat,smiley_cat)'
    msg_title: 
      default: 'Gitlab ntfy Component'
      description: 'The Title that the ntfy web-push message will be sent with.'
    # msg_email:

---

'$[[ inputs.as ]]':
  stage: '$[[ inputs.stage ]]'
  image:
    name: alpine:latest
    entrypoint: [""]
  variables:
    NTFY_TOKEN: "$[[ inputs.ntfy_token ]]"
    NTFY_URL: "$[[ inputs.ntfy_url ]]"
    MSG_ACTION: "$[[ inputs.msg_action ]]"
    MSG_ATTACH: "$[[ inputs.msg_attach ]]"
    MSG_BODY: "$[[ inputs.msg_body ]]"
    MSG_CLICK: "$[[ inputs.msg_click ]]"
    # MSG_EMAIL: "$[[ inputs.msg_email ]]"
    MSG_MARKDOWN: "$[[ inputs.msg_markdown ]]"
    MSG_PRIORITY: "$[[ inputs.msg_priority ]]"
    MSG_TAGS: "$[[ inputs.msg_tags ]]"
    MSG_TITLE: "$[[ inputs.msg_title ]]"
  before_script: |
    echo "---------------------------------------------------------------------------"
    echo "ntfy GitOps Component ðŸ”” - preparing environment - Building an alpine image to send a web-push notification via ntfy ..."
    echo "---------------------------------------------------------------------------"
    echo "Installing dependencies [curl]..."
    apk add --no-cache curl >/dev/null
  script: |
    echo "---------------------------------------------------------------------------"
    echo "ntfy GitOps Component ðŸ”” - web-push - Now sending a web-push notification via ntfy..."
    curl \
      -d "${MSG_BODY}" \
      -H "Actions: ${MSG_ACTION}" \
      -H "Attach: ${MSG_ATTACH}" \
      -H "Click: ${MSG_CLICK}" \
      -H "Markdown: ${MSG_MARKDOWN}" \
      -H "Priority: ${MSG_PRIORITY}" \
      -H "Tags: ${MSG_TAGS}" \
      -H "Title: ${MSG_TITLE}" \
      -H "Authorization: Bearer ${NTFY_TOKEN}" \
      "${NTFY_URL}"
      # -H "Email: "$MSG_EMAIL"
    echo "---------------------------------------------------------------------------"
    echo # ntfy GitOps Component ðŸ”” - web-push - Sent web-push notification via ntfy... âœ…"
    echo "---------------------------------------------------------------------------"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      #changes:
        #- '$[[ inputs.root_dir ]]/$[[ inputs.project_file ]]'
