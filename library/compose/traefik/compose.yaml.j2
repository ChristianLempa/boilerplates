services:
  {{ service_name }}:
    image: docker.io/library/traefik:v3.5.3
    {% if not swarm_enabled %}
    container_name: {{ container_name }}
    {% endif %}
    {% if ports_enabled %}
    ports:
      - "80:80"
      - "443:443"
      {% if traefik_dashboard_enabled %}
      - "8080:8080"  # Dashboard (don't use in production)
      {% endif %}
    {% endif %}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/:/etc/traefik/:ro
      - ./certs/:/var/traefik/certs/:rw
      {% if traefik_tls_enabled %}
      {% if not swarm_enabled %}
      - ./.env.secret:/.env.secret:ro
      {% endif %}
    env_file:
      - ./.env
    {% endif %}
    environment:
      - TZ={{ container_timezone }}
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    {% if network_enabled %}
    networks:
      - {{ network_name }}
    {% endif %}
    {% if swarm_enabled %}
    {% if traefik_tls_enabled %}
    secrets:
      - source: {{ traefik_tls_acme_secret_name }}
        target: /.env.secret
        mode: 0400
    {% endif %}
    deploy:
      {% if swarm_placement_mode in ['global', 'replicated'] %}
      mode: {{ swarm_placement_mode }}
      {% if swarm_placement_mode == 'replicated' %}
      replicas: {{ swarm_replicas }}
      {% endif %}
      {% else %}
      mode: replicated
      replicas: {{ swarm_replicas }}
      placement:
        constraints:
          - {{ swarm_placement_mode }}
      {% endif %}
    {% else %}
    restart: {{ restart_policy }}
    {% endif %}

{% if swarm_enabled and traefik_tls_enabled %}
secrets:
  {{ traefik_tls_acme_secret_name }}:
    file: ./.env.secret
{% endif %}

{% if network_enabled %}
networks:
  {{ network_name }}:
    {% if network_external %}
    external: true
    {% else %}
    driver: bridge
    {% endif %}
{% endif %}
