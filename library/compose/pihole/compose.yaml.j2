services:
  {{ service_name }}:
    container_name: {{ container_name }}
    image: docker.io/pihole/pihole:2025.08.0
    env_file:
      - .env.pihole
    {% if network_mode == 'host' %}
    network_mode: host
    {% elif traefik_enabled or network_mode == 'macvlan' %}
    networks:
      {% if traefik_enabled %}
      {{ traefik_network }}:
      {% endif %}
      {% if network_mode == 'macvlan' %}
      {{ network_name }}:
        ipv4_address: {{ network_macvlan_ipv4_address }}
      {% elif network_mode == 'bridge' %}
      {{ network_name }}:
      {% endif %}
    {% endif %}
    {% if network_mode not in ['host', 'macvlan'] and (not traefik_enabled or dns_enabled or dhcp_enabled) %}
    ports:
      {% if not traefik_enabled %}
      - "{{ ports_https }}:443/tcp"
      {% endif %}
      {% if dns_enabled %}
      - "53:53/tcp"
      - "53:53/udp"
      {% endif %}
      {% if dhcp_enabled %}
      - "67:67/udp"
      {% endif %}
    {% endif %}
    volumes:
      - config_dnsmasq:/etc/dnsmasq.d
      - config_pihole:/etc/pihole
    {% if dhcp_enabled %}
    cap_add:
      - NET_ADMIN
    {% endif %}
    {% if traefik_enabled %}
    labels:
      - traefik.enable=true
      - traefik.http.services.{{ service_name }}-web.loadBalancer.server.port=80
      - traefik.http.routers.{{ service_name }}-http.service={{ service_name }}-web
      - traefik.http.routers.{{ service_name }}-http.rule=Host(`{{ traefik_host }}`)
      - traefik.http.routers.{{ service_name }}-http.entrypoints={{ traefik_entrypoint }}
      {% if traefik_tls_enabled %}
      - traefik.http.routers.{{ service_name }}-https.service={{ service_name }}-web
      - traefik.http.routers.{{ service_name }}-https.rule=Host(`{{ traefik_host }}`)
      - traefik.http.routers.{{ service_name }}-https.entrypoints={{ traefik_tls_entrypoint }}
      - traefik.http.routers.{{ service_name }}-https.tls=true
      - traefik.http.routers.{{ service_name }}-https.tls.certresolver={{ traefik_tls_certresolver }}
      {% endif %}
    {% endif %}
    restart: {{ restart_policy }}

volumes:
  config_dnsmasq:
    driver: local
  config_pihole:
    driver: local

{% if network_mode != 'host' and (network_mode in ['bridge', 'macvlan'] or traefik_enabled) %}
networks:
  {% if network_mode == 'macvlan' %}
  {{ network_name }}:
    driver: macvlan
    driver_opts:
      parent: {{ network_macvlan_parent_interface }}
    ipam:
      config:
        - subnet: {{ network_macvlan_subnet }}
          gateway: {{ network_macvlan_gateway }}
  {% elif network_mode == 'bridge' and network_external %}
  {{ network_name }}:
    external: true
  {% elif network_mode == 'bridge' and not network_external %}
  {{ network_name }}:
    driver: bridge
  {% endif %}
  {% if traefik_enabled %}
  {{ traefik_network }}:
    external: true
  {% endif %}
{% endif %}
